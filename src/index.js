import React from 'react'; // core library
import ReactDOM from 'react-dom'; // library for rendering into DOM element
// import './index.css';
import App from './App'; // application entry point, can be called anything, but App is common
// import reportWebVitals from './reportWebVitals';

/*
ReactDOM uses document.getElementById('root') to retrieve a reference to the DOM element declared
in index.html. ReactDOM then creates an instance of App and appends its output to the element whose
ID is root. The src/App.js is the entry point of the React.js application we're going to build and
it might contain code generated by the create-react-app tool we used to create the project at the
beginning of the course. Let's replace the content of src/App.js with the code below. It's basically
a function called App that returns an H1 element greeting the world. Note how the return statement
is returning an HTML tag, not an HTML string. This is possible because React.js uses a library called
JSX or JavaScript XML. JSX allows mixing and matching JavaScript and XML seamlessly and HTML is just
a particular flavor of XML. This syntax greatly simplifies integrating HTML and JavaScript as if they
were two sides of the same coin.
 */
ReactDOM.render( // use library to render
  // <React.StrictMode>
    <App />, // App
  // </React.StrictMode>,
  document.getElementById('root') // into element whose ID is root, the one declared earlier in index.html
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
// reportWebVitals();
